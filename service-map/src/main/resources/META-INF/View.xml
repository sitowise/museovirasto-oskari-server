<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="View">

    <typeAlias
        alias="View"
        type="fi.nls.oskari.domain.map.view.View" />
    <typeAlias
        alias="Bundle"
        type="fi.nls.oskari.domain.map.view.Bundle" />


<!-- View -->

    <resultMap id="view-with-conf" class="View">
      <result property="id" column="id" />
      <result property="oldId" column="old_id" />
      <result property="uuid" column="uuid" />
      <result property="name" column="name" />
      <result property="description" column="description" />
      <result property="type" column="type" />
      <result property="application" column="application" />
      <result property="page" column="page" />
      <result property="developmentPath" column="application_dev_prefix" />
      <result property="pubDomain" column="domain" />
      <result property="lang" column="lang" />
      <result property="creator" column="creator" />
      <result property="onlyForUuId" column="only_uuid" />
      <result property="isPublic" column="is_public" />
      <result property="isDefault" column="is_default" />
      <result property="metadata" column="metadata" jdbcType="VARCHAR" javaType="org.json.JSONObject" />
      <result property="bundles" column="id"
              select="View.states-with-conf-by-view-id" />
    </resultMap>


    <resultMap id="bundle" class="Bundle">
        <result property="bundleId" column="bundle_id" />
        <result property="seqNo" column="seqno" />
        <result property="viewId" column="view_id" />
        <result property="state" column="state" />
        <result property="config" column="config" />
        <result property="startup" column="startup" />
        <result property="name" column="name" />
        <result property="bundleinstance" column="bundleinstance" />
    </resultMap>

    <select id="paged-views"
            parameterClass="java.util.Map"
            resultMap="view-with-conf">
      SELECT   id, name, description, type, uuid, only_uuid,
               application, page, application_dev_prefix, creator,
	           is_public, is_default, domain, lang, old_id, metadata
        FROM   portti_view
        ORDER BY created ASC
        OFFSET $offset$ limit $limit$
    </select>

    <select id="view-with-conf-by-view-name"
            parameterClass="java.lang.String"
            resultMap="view-with-conf">
      SELECT   id, name, description, type, uuid, only_uuid,
               application, page, application_dev_prefix, creator,
	           is_public, is_default, domain, lang, old_id, metadata
        FROM   portti_view
       WHERE   name = #name#
    </select>

    <select id="view-with-conf-by-view-id"
            parameterClass="java.lang.Long"
            resultMap="view-with-conf">
      SELECT   id, name, description, type, uuid, only_uuid,
               application, page, application_dev_prefix, creator,
	           is_public, is_default, domain, lang, old_id, metadata
        FROM   portti_view
       WHERE   id = #id#
    </select>

    <select id="view-with-conf-by-uuid"
            parameterClass="java.lang.String"
            resultMap="view-with-conf">
        SELECT   id, name, description, type, uuid, only_uuid,
                 application, page, application_dev_prefix, creator,
                 is_public, is_default, domain, lang, old_id, metadata
        FROM   portti_view
       WHERE   uuid::text = #uuId#
    </select>

    <select id="view-with-conf-by-old-id"
            parameterClass="java.lang.Long"
            resultMap="view-with-conf">
        SELECT   id, name, description, type, uuid, only_uuid,
                application, page, application_dev_prefix, creator,
                is_public, is_default, domain, lang, old_id, metadata
        FROM   portti_view
       WHERE   old_id = #old_id#
    </select>

    <select id="views-with-conf-by-user-id"
            resultMap="view-with-conf">
        SELECT   id, name, description, type, uuid, only_uuid,
                application, page, application_dev_prefix, creator,
                is_public, is_default, domain, lang, old_id, metadata
        FROM   portti_view
       WHERE   creator = #user_id#
    ORDER BY   name ASC
    </select>

    <statement id="resetUsersDefaultViews"
               parameterClass="java.lang.Long">
        UPDATE portti_view
        SET is_default = FALSE
        WHERE creator = #user_id#
        AND type = 'USER';
    </statement>

    <select id="get-default-view-id-by-user-id"
            resultClass="java.lang.Long"
            parameterClass="java.lang.Long">
        SELECT   MAX(id)
        FROM   portti_view
        WHERE   is_default = TRUE
        AND   type = 'USER'
        AND   creator = #user_id#;
    </select>

    <select id="get-default-view-id"
	    resultClass="java.lang.Long"
	    parameterClass="java.lang.String">
      SELECT   MAX(id)
        FROM   portti_view
       WHERE   is_default = TRUE
         AND   type = #type#
    </select>

    <select id="get-default-view-ids"
        resultClass="java.lang.Long">
        SELECT id
        FROM   portti_view
        WHERE  is_default = TRUE
        AND    type = 'DEFAULT'
        AND    creator = -1;
    </select>

    <statement id="add-view"
               resultClass="java.lang.Long"
               parameterClass="View">
      INSERT INTO portti_view ( name, "description", type, application_dev_prefix, page, application, uuid, only_uuid, domain, lang, creator, is_public, is_default, metadata)
           VALUES ( #name#, #description#, #type#, #developmentPath#, #page#, #application#, '$uuid$', true, #pubDomain#, #lang#, #creator#, #isPublic#, #isDefault#, #metadataAsString# )
        RETURNING id
    </statement>

    <statement id="update-access"
               parameterClass="View">
      UPDATE portti_view
         SET is_public = #isPublic#
       WHERE id = #id#
    </statement>

    <statement id="update"
               parameterClass="View">
      UPDATE portti_view
         SET name = #name#, description = #description#,
        application = #application#, page = #page#, application_dev_prefix = #developmentPath#,
         domain = #pubDomain#, lang = #lang#, is_public = #isPublic#, is_default = #isDefault#, metadata = #metadataAsString#
       WHERE id = #id#
    </statement>

    <statement id="updateUsage"
               parameterClass="View">
        UPDATE portti_view
        SET used=now(),
            usagecount=(SELECT usagecount+1 FROM portti_view WHERE id=#id#)
        WHERE id=#id#;
    </statement>

    <statement id="delete-view"
               parameterClass="java.lang.Long">
      DELETE FROM portti_view WHERE id = #id#
    </statement>

    <statement id="delete-view-by-user"
               parameterClass="java.lang.Long">
      DELETE FROM portti_view
            WHERE creator = #userId#
    </statement>

    <!-- FIXME: bundle-by-view-id is identical - remove this one  -->
    <select id="states-with-conf-by-view-id"
            parameterClass="java.lang.Long"
            resultMap="bundle">
      SELECT   s.state, s.view_id, s.seqno, s.config, s.startup, b.name, s.bundle_id, s.bundleinstance
        FROM   portti_view_bundle_seq s, portti_bundle b
       WHERE   s.bundle_id = b.id AND view_id = #id# order by s.seqno ASC
    </select>

    <select id="bundle-by-view-id"
            parameterClass="java.lang.Long"
            resultMap="bundle">
      SELECT   s.view_id, s.bundle_id, s.seqno, s.state, s.config, s.startup, s.bundleinstance, b.name
        FROM   portti_view_bundle_seq s, portti_bundle b
       WHERE   view_id = #view_id# AND s.bundle_id = b.id
       ORDER BY s.seqno ASC
    </select>

    <statement id="add-bundle"
            parameterClass="Bundle">
      INSERT INTO portti_view_bundle_seq (view_id, bundle_id, seqno, state, config, bundleinstance)
           VALUES ( #viewId#, #bundleId#, #seqNo#, #state#, #config#, #bundleinstance#)
        RETURNING view_id
    </statement>

    <statement id="delete-bundle-by-view"
               parameterClass="java.lang.Long">
      DELETE FROM portti_view_bundle_seq WHERE view_id = #id#
    </statement>

    <update id="update-bundle-settings-in-view"
            parameterClass="java.util.Map">
        UPDATE portti_view_bundle_seq SET
            config = #config#,
            state = #state#,
            bundleinstance = #bundleinstance#
        WHERE view_id = #view_id# AND bundle_id = #bundle_id#
    </update>


</sqlMap>
